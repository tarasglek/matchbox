---
systemd:
  units:
    - name: mnt-data.mount
      enable: true
      contents: |
        [Mount]
        What=198.19.0.1:/root
        Where=/mnt/data/
        Type=nfs
        [Install]
        WantedBy=multi-user.target
        RequiredBy=etcd-member.service kubelet.service bootkube.service dns.service
    - name: hacketcd.service
      enable: true
      contents: |
        [Unit]
        Description=fix etcd perms. Probably can also do this by bumping ignition to 2.1
        Before=etcd-member.service
        [Service]
        Type=oneshot
        ExecStartPre=/usr/bin/chown -Rv etcd:etcd /etc/ssl/etcd
        ExecStartPre=/usr/bin/chmod -Rv 500 /etc/ssl/etcd/
        ExecStart=/usr/bin/sleep 0
        [Install]
        RequiredBy=etcd-member.service
    - name: dns.service
      enable: true
      contents: |
        [Unit]
        Description=Local dns service bootkube.service. Ignore stuff after /controller/
        Before=kubelet.service
        After=mnt-data.mount
        Requires=mnt-data.mount
        [Service]
        Type=simple
        ExecStart=/usr/bin/rkt run --insecure-options=image --net=host /mnt/data/coreos/dnsmasq.aci \
          --caps-retain=CAP_NET_ADMIN,CAP_NET_BIND_SERVICE,CAP_SETGID,CAP_SETUID,CAP_NET_RAW \
          -- -d \
          --address=/controller/198.18.94.1 \
          --address=/matchbox.foo/172.17.0.2 \
          --server=10.14.250.53
        [Install]
        RequiredBy=kubelet.service bootkube.service
    - name: etcd-member.service
      enable: true
      dropins:
        - name: 40-etcd-cluster.conf
          contents: |
            [Service]
            Environment="ETCD_IMAGE_TAG="
            Environment="ETCD_IMAGE=--insecure-options=image /mnt/data/coreos/etcd.aci"
            Environment="ETCD_NAME=controller"
            Environment="ETCD_ADVERTISE_CLIENT_URLS=https://controller:2379"
            Environment="ETCD_INITIAL_ADVERTISE_PEER_URLS=https://controller:2380"
            Environment="ETCD_LISTEN_CLIENT_URLS=https://0.0.0.0:2379"
            Environment="ETCD_LISTEN_PEER_URLS=https://0.0.0.0:2380"
            Environment="ETCD_INITIAL_CLUSTER=controller=https://controller:2380"
            Environment="ETCD_STRICT_RECONFIG_CHECK=true"
            Environment="ETCD_SSL_DIR=/etc/ssl/etcd"
            Environment="ETCD_TRUSTED_CA_FILE=/etc/ssl/certs/etcd/server-ca.crt"
            Environment="ETCD_CERT_FILE=/etc/ssl/certs/etcd/server.crt"
            Environment="ETCD_KEY_FILE=/etc/ssl/certs/etcd/server.key"
            Environment="ETCD_CLIENT_CERT_AUTH=true"
            Environment="ETCD_PEER_TRUSTED_CA_FILE=/etc/ssl/certs/etcd/peer-ca.crt"
            Environment="ETCD_PEER_CERT_FILE=/etc/ssl/certs/etcd/peer.crt"
            Environment="ETCD_PEER_KEY_FILE=/etc/ssl/certs/etcd/peer.key"
            Environment="ETCD_PEER_CLIENT_CERT_AUTH=true"
    - name: iscsid.service
      enable: true
    - name: docker.service
      enable: true
    - name: locksmithd.service
      mask: true
    - name: kubelet.path
      enable: true
      contents: |
        [Unit]
        Description=Watch for kubeconfig
        [Path]
        PathExists=/etc/kubernetes/kubeconfig
        [Install]
        WantedBy=multi-user.target
    - name: wait-for-dns.service
      enable: true
      contents: |
        [Unit]
        Description=Wait for DNS entries
        Wants=systemd-resolved.service
        Before=kubelet.service
        [Service]
        Type=oneshot
        RemainAfterExit=true
        ExecStart=/bin/sh -c 'while ! /usr/bin/grep '^[^#[:space:]]' /etc/resolv.conf > /dev/null; do sleep 1; done'
        [Install]
        RequiredBy=kubelet.service
    - name: multipathd.service
      enable: true
      contents: |
        [Unit]
        Description=Multipath service
        Before=kubelet.service
        [Service]
        ExecStartPre=/sbin/modprobe dm-multipath
        ExecStart=/usr/sbin/multipathd -d -s
        [Install]
        RequiredBy=kubelet.service
    - name: kubelet.service
      contents: |
        [Unit]
        Description=Kubelet via Hyperkube ACI
        [Service]
        EnvironmentFile=/etc/kubernetes/kubelet.env
        Environment="RKT_RUN_ARGS=--uuid-file-save=/var/run/kubelet-pod.uuid \
          --volume=resolv,kind=host,source=/etc/resolv.conf \
          --mount volume=resolv,target=/etc/resolv.conf \
          --volume var-lib-cni,kind=host,source=/var/lib/cni \
          --mount volume=var-lib-cni,target=/var/lib/cni \
          --volume var-log,kind=host,source=/var/log \
          --mount volume=var-log,target=/var/log \
          --volume iscsiadm,kind=host,source=/usr/sbin/iscsiadm \
          --mount volume=iscsiadm,target=/usr/sbin/iscsiadm \
          --volume iscsietc,kind=host,source=/etc/iscsi \
          --mount volume=iscsietc,target=/etc/iscsi \
          --insecure-options=image"
        ExecStartPre=/bin/mkdir -p /etc/kubernetes/manifests
        ExecStartPre=/bin/mkdir -p /etc/kubernetes/cni/net.d
        ExecStartPre=/bin/mkdir -p /etc/kubernetes/checkpoint-secrets
        ExecStartPre=/bin/mkdir -p /etc/kubernetes/inactive-manifests
        ExecStartPre=/bin/mkdir -p /var/lib/cni
        ExecStartPre=/bin/mkdir -p /etc/kubernetes/volume-plugins
        ExecStartPre=/usr/bin/bash -c "grep 'certificate-authority-data' /etc/kubernetes/kubeconfig | awk '{print $2}' | base64 -d > /etc/kubernetes/ca.crt"
        ExecStartPre=-/usr/bin/rkt rm --uuid-file=/var/run/kubelet-pod.uuid
        ExecStart=/usr/lib/coreos/kubelet-wrapper \
          --kubeconfig=/etc/kubernetes/kubeconfig \
          --require-kubeconfig \
          --client-ca-file=/etc/kubernetes/ca.crt \
          --anonymous-auth=false \
          --cni-conf-dir=/etc/kubernetes/cni/net.d \
          --network-plugin=cni \
          --lock-file=/var/run/lock/kubelet.lock \
          --exit-on-lock-contention \
          --pod-manifest-path=/etc/kubernetes/manifests \
          --allow-privileged \
          --hostname-override=controller \
          --node-labels=node-role.kubernetes.io/master \
          --register-with-taints=node-role.kubernetes.io/master=:NoSchedule \
          --cluster_dns=10.3.0.10 \
          --cluster_domain=cluster.local \
          --volume-plugin-dir=/etc/kubernetes/volume-plugins --enable-controller-attach-detach=false
        ExecStop=-/usr/bin/rkt stop --uuid-file=/var/run/kubelet-pod.uuid
        Restart=always
        RestartSec=10
        [Install]
        WantedBy=multi-user.target
    - name: bootkube.service
      enable: true
      contents: |
        [Unit]
        Description=Bootstrap a Kubernetes control plane with a temp api-server
        After=dns.service
        Wants=dns.service
        [Service]
        Type=simple
        WorkingDirectory=/opt/bootkube
        ExecStartPre=/bin/sh -c 'until ping -c 10 google.com; do sleep 1;done'
        ExecStart=/opt/bootkube/bootkube-start
        [Install]
        WantedBy=multi-user.target

storage:
  files:
    - path: /etc/resolv.conf
      filesystem: root
      mode: 0644
      contents:
        inline: |
          nameserver 198.18.94.1
    - path: /etc/kubernetes/kubelet.env
      filesystem: root
      mode: 0644
      contents:
        inline: |
          KUBELET_IMAGE=/mnt/data/coreos/hyperkube.aci
          KUBELET_IMAGE_URL=file:///mnt/data/coreos/hyperkube.aci
    - path: /etc/ssl/etcd/.empty
      filesystem: root
      mode: 0644
      contents:
        inline: |
          empty
    - path: /etc/hostname
      filesystem: root
      mode: 0644
      contents:
        inline:
          "controller"
    - path: /etc/hosts
      filesystem: root
      mode: 0644
      contents:
        inline: |
          127.0.0.1 localhost
    - path: /etc/modprobe.d/bonding.conf
      filesystem: "root"
      mode: 0444
      contents:
        inline: |
          options bonding max_bonds=0
    - path: /etc/sysctl.d/max-user-watches.conf
      filesystem: root
      contents:
        inline: |
          fs.inotify.max_user_watches=16184
    - path: /opt/bootkube/bootkube-start
      filesystem: root
      mode: 0544
      user:
        id: 500
      group:
        id: 500
      contents:
        inline: |
          #!/bin/bash
          # Wrapper for bootkube start
          set -e
          BOOTKUBE_ACI="/mnt/data/coreos/bootkube.aci"
          BOOTKUBE_VERSION=""
          BOOTKUBE_ASSETS="${BOOTKUBE_ASSETS:-/opt/bootkube/assets}"
          exec /usr/bin/rkt run \
            --trust-keys-from-https \
            --volume assets,kind=host,source=$BOOTKUBE_ASSETS \
            --mount volume=assets,target=/assets \
            --volume bootstrap,kind=host,source=/etc/kubernetes \
            --mount volume=bootstrap,target=/etc/kubernetes \
            --insecure-options=image \
            $RKT_OPTS \
            ${BOOTKUBE_ACI} \
            --net=host \
            --dns=host \
            --exec=/bootkube -- start --asset-dir=/assets "$@"
passwd:
  users:
    - name: ir
      password_hash: $6$Vs0aaet88$9GJUfIlKjFdTmpnm7Sqhv0k/UUA2M/OkhIrbqbaLLiBkNsS/oYAAf3L5rhTjvRYRnvEHGc0SUmfntWkYz7Aks0
      create:
        uid: 1000
        home_dir: /home/ir
        shell: /bin/bash
        groups:
          - sudo
"networkd": {
   "units": [
      {
        "name": "00-eno.network",
        "contents": "[Match]\nName=eno*\n\n[Network]\nBond=bond0"
      },
      {
        "name": "10-bond0.netdev",
        "contents": "[NetDev]\nName=bond0\nKind=bond\n\n[Bond]\nMode=802.3ad\nMIIMonitorSec=1s\nLACPTransmitRate=fast\nTransmitHashPolicy=layer3+4"
      },
      {
        "name": "20-bond0.network",
        "contents": "[Match]\nName=bond0\n\n[Network]\nDHCP=no\nVLAN=data\nVLAN=admin\nAddress=fd69:726e:6574:3::1000/64\nAddress=198.18.94.1/19"
      },
      {
        "name": "30-data.netdev",
        "contents": "[NetDev]\nName=data\nKind=vlan\n\n[VLAN]\nId=4001"
      },
      {
        "name": "40-data.network",
        "contents": "[Match]\nName=data\n\n[Network]\nAddress=198.19.0.10/28\n"
      },
      {
        "name": "50-admin.netdev",
        "contents": "[NetDev]\nName=admin\nKind=vlan\n\n[VLAN]\nId=329"
      },
      {
        "name": "60-admin.network",
        "contents": "[Match]\nName=admin\n\n[Network]\nAddress=10.201.123.140/27\nGateway=10.201.123.129"
      }

    ]
  }